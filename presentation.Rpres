A shiny application for Exploratory Data Analysis
========================================================
author: hidekoji
date: 


========================================================
nycflights13 data

So this shiny application allows you to peform Exploratory Data Analyis against nycflights13 data.
nycflights13 contains Airline on-time data for all flights departing NYC in 2013. 

```{r}
library("nycflights13");head(flights[ c('dep_time','dep_delay', 'arr_time', 'arr_delay', 'carrier')])
```

Arrival Delay vs Departure Delay
========================================================
By glancing the data, I'm just curious how the relationship between Arrival Delay and Departure Delay looks like, so I want to show the scatter plot like this in my shiny app to do Exploratory Data Analysis(EDA). (NOTE:It looks like Rpres does not support ggvis output so used ggplot in this slide. The plot's look and feel are different from actual shinny app)

```{r load_packages, include=FALSE}
library(ggplot2)
library(dplyr)
```

```{r, echo=FALSE}
filtered <- subset(flights,(carrier == "AA" | carrier == "UA") & arr_delay >= 100 & arr_delay <= 500 & dep_delay >= 100 & dep_delay <= 500) 

    ggplot(data = filtered, aes(arr_delay, dep_delay)) +
    geom_point(aes(colour = factor(carrier), size = distance)) 
```


Make the scatter plot dynamic
========================================================
Since the data set contains lots of data (`r dim(flights)[1]` rows), you might want to filter data by delay time and carrier, so add these as Shiny UI widget

<img src="https://farm8.staticflickr.com/7610/16692296918_908ec7cba7_b.jpg" />

K-means Clustering Plot
========================================================
On top of the EDA, I'm also curious if these data can be clustered with K-means. So I added another plot to show this.(NOTE:It looks like Rpres does not support ggvis output so used ggplot in this slide. The plot's look and feel are different from actual shinny app)


```{r, echo=FALSE}
   filtered <- subset(flights,(carrier == "AA" | carrier == "UA") & arr_delay >= 100 & arr_delay <= 500 & dep_delay >= 100 & dep_delay <= 500) 
    kmdata <- filtered %>% select(arr_delay, dep_delay)
    clustered <- kmeans(kmdata, 6)
    kmdata$cluster <- clustered$cluster
    ggplot(data = kmdata, aes(arr_delay, dep_delay)) +
    geom_point(aes(colour = factor(cluster)))    

```
